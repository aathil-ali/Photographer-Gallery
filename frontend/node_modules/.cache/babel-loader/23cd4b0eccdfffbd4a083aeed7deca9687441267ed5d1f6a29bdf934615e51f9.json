{"ast":null,"code":"import _regeneratorRuntime from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// store/profile.js\n\n// Vuex store module for managing user profiles\n\nvar state = {\n  // Initialize state for storing user profiles\n  profile: []\n};\nvar getters = {\n  // Getter method to retrieve user profiles from the state\n  profile: function profile(state) {\n    return state.profile;\n  }\n};\nvar actions = {\n  // Action method to fetch user profile data from the server\n  fetchProfile: function () {\n    var _fetchProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n      var commit, rootGetters, token, response, responseData;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, rootGetters = _ref.rootGetters;\n            _context.prev = 1;\n            // Retrieve the authentication token from rootGetters\n            token = rootGetters['authToken']; // Check if the authentication token is available\n            if (token) {\n              _context.next = 6;\n              break;\n            }\n            console.error('Token not available');\n            return _context.abrupt(\"return\");\n          case 6:\n            _context.next = 8;\n            return fetch('http://127.0.0.1:8000/api/profile', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(token)\n              }\n            });\n          case 8:\n            response = _context.sent;\n            _context.next = 11;\n            return response.json();\n          case 11:\n            responseData = _context.sent;\n            if (response.ok) {\n              _context.next = 14;\n              break;\n            }\n            throw new Error(responseData.message || 'Failed to fetch profile');\n          case 14:\n            // Commit the fetched user profile data to the Vuex store\n            commit('setProfile', responseData.data);\n            _context.next = 20;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('Error fetching profile:', _context.t0.message);\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 17]]);\n    }));\n    function fetchProfile(_x) {\n      return _fetchProfile.apply(this, arguments);\n    }\n    return fetchProfile;\n  }()\n};\nvar mutations = {\n  // Mutation method to update the user profile state\n  setProfile: function setProfile(state, profile) {\n    state.profile = profile;\n  }\n};\n\n// Export the profile module for Vuex store registration\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["state","profile","getters","actions","fetchProfile","_fetchProfile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","commit","rootGetters","token","response","responseData","wrap","_callee$","_context","prev","next","console","error","abrupt","fetch","method","headers","concat","sent","json","ok","Error","message","data","t0","stop","_x","apply","arguments","mutations","setProfile"],"sources":["/opt/homebrew/var/www/frontend/src/store/profile.js"],"sourcesContent":["// store/profile.js\n\n// Vuex store module for managing user profiles\n\nconst state = {\n  // Initialize state for storing user profiles\n  profile: [],\n};\n\nconst getters = {\n  // Getter method to retrieve user profiles from the state\n  profile: (state) => state.profile,\n};\n\nconst actions = {\n  // Action method to fetch user profile data from the server\n  fetchProfile: async ({ commit, rootGetters }) => {\n    try {\n      // Retrieve the authentication token from rootGetters\n      const token = rootGetters['authToken'];\n\n      // Check if the authentication token is available\n      if (!token) {\n        console.error('Token not available');\n        return;\n      }\n\n      // Fetch user profile data from the server\n      const response = await fetch('http://127.0.0.1:8000/api/profile', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      // Extract JSON response data\n      const responseData = await response.json();\n\n      // Check if the response is successful\n      if (!response.ok) {\n        throw new Error(responseData.message || 'Failed to fetch profile');\n      }\n\n      // Commit the fetched user profile data to the Vuex store\n      commit('setProfile', responseData.data);\n\n    } catch (error) {\n      console.error('Error fetching profile:', error.message);\n    }\n  },\n};\n\nconst mutations = {\n  // Mutation method to update the user profile state\n  setProfile: (state, profile) => {\n    state.profile = profile;\n  },\n};\n\n// Export the profile module for Vuex store registration\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"mappings":";;;AAAA;;AAEA;;AAEA,IAAMA,KAAK,GAAG;EACZ;EACAC,OAAO,EAAE;AACX,CAAC;AAED,IAAMC,OAAO,GAAG;EACd;EACAD,OAAO,EAAE,SAAAA,QAACD,KAAK;IAAA,OAAKA,KAAK,CAACC,OAAO;EAAA;AACnC,CAAC;AAED,IAAME,OAAO,GAAG;EACd;EACAC,YAAY;IAAA,IAAAC,aAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAAC,IAAA;MAAA,IAAAC,MAAA,EAAAC,WAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,YAAA;MAAA,OAAAR,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAST,MAAM,GAAAD,IAAA,CAANC,MAAM,EAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;YAAAM,QAAA,CAAAC,IAAA;YAEtC;YACMN,KAAK,GAAGD,WAAW,CAAC,WAAW,CAAC,EAEtC;YAAA,IACKC,KAAK;cAAAK,QAAA,CAAAE,IAAA;cAAA;YAAA;YACRC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;YAAC,OAAAJ,QAAA,CAAAK,MAAA;UAAA;YAAAL,QAAA,CAAAE,IAAA;YAAA,OAKhBI,KAAK,CAAC,mCAAmC,EAAE;cAChEC,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,YAAAC,MAAA,CAAYd,KAAK;cAClC;YACF,CAAC,CAAC;UAAA;YANIC,QAAQ,GAAAI,QAAA,CAAAU,IAAA;YAAAV,QAAA,CAAAE,IAAA;YAAA,OASaN,QAAQ,CAACe,IAAI,CAAC,CAAC;UAAA;YAApCd,YAAY,GAAAG,QAAA,CAAAU,IAAA;YAAA,IAGbd,QAAQ,CAACgB,EAAE;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,MACR,IAAIW,KAAK,CAAChB,YAAY,CAACiB,OAAO,IAAI,yBAAyB,CAAC;UAAA;YAGpE;YACArB,MAAM,CAAC,YAAY,EAAEI,YAAY,CAACkB,IAAI,CAAC;YAACf,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;YAGxCG,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEJ,QAAA,CAAAgB,EAAA,CAAMF,OAAO,CAAC;UAAC;UAAA;YAAA,OAAAd,QAAA,CAAAiB,IAAA;QAAA;MAAA,GAAA1B,OAAA;IAAA,CAE3D;IAAA,SAAAL,aAAAgC,EAAA;MAAA,OAAA/B,aAAA,CAAAgC,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAlC,YAAA;EAAA;AACH,CAAC;AAED,IAAMmC,SAAS,GAAG;EAChB;EACAC,UAAU,EAAE,SAAAA,WAACxC,KAAK,EAAEC,OAAO,EAAK;IAC9BD,KAAK,CAACC,OAAO,GAAGA,OAAO;EACzB;AACF,CAAC;;AAED;AACA,eAAe;EACbD,KAAK,EAALA,KAAK;EACLE,OAAO,EAAPA,OAAO;EACPC,OAAO,EAAPA,OAAO;EACPoC,SAAS,EAATA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}