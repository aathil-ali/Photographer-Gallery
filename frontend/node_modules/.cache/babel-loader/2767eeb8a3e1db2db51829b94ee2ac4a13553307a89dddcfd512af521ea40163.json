{"ast":null,"code":"import _regeneratorRuntime from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nexport default {\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var self, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              self = _this;\n              _context.prev = 1;\n              if (!(!self.email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(self.email))) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 4:\n              if (self.password) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.next = 8;\n              return self.$store.dispatch(\"login\", {\n                email: self.email,\n                password: self.password\n              });\n            case 8:\n              response = _context.sent;\n              // Check if login was successful based on the response\n              if (response.success) {\n                // Redirect the user to the admin dashboard if login is successful\n                self.$router.push(\"/profile\");\n              } else {\n                // Handle unsuccessful login (optional)\n                console.error(\"Login failed:\", response.message);\n              }\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              // Handle any errors that occurred during the login process\n              console.error(\"Error during login\", _context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 12]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["/opt/homebrew/var/www/frontend/src/views/auth/Login.vue"],"names":[],"mappings":";;;;AA0FA,eAAe;EACb,IAAI,WAAA,KAAA,EAAG;IACL,OAAO;MACL,KAAK,EAAE,EAAE;MACT,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,OAAO,EAAE;IACD,KAAK,WAAA,MAAA,EAAG;MAAA,IAAA,KAAA;MAAA,OAAA,iBAAA,eAAA,mBAAA,GAAA,IAAA,UAAA,QAAA;QAAA,IAAA,IAAA,EAAA,QAAA;QAAA,OAAA,mBAAA,GAAA,IAAA,UAAA,SAAA,QAAA;UAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;YAAA;cACR,IAAG,GAAI,KAAI;cAAA,QAAA,CAAA,IAAA;cAAA,MAET,CAAC,IAAI,CAAC,KAAI,IAAK,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAAA,QAAA,CAAA,IAAA;gBAAA;cAAA;cAAA,OAAA,QAAA,CAAA,MAAA;YAAA;cAAA,IAC5D,IAAI,CAAC,QAAQ;gBAAA,QAAA,CAAA,IAAA;gBAAA;cAAA;cAAA,OAAA,QAAA,CAAA,MAAA;YAAA;cAAA,QAAA,CAAA,IAAA;cAAA,OAEK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACnD,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC;cACjB,CAAC,CAAC;YAAA;cAHI,QAAO,GAAA,QAAA,CAAA,IAAA;cAKb;cACA,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB;gBACA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;cAC/B,CAAA,MAAO;gBACL;gBACA,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC,OAAO,CAAC;cAClD;cAAA,QAAA,CAAA,IAAA;cAAA;YAAA;cAAA,QAAA,CAAA,IAAA;cAAA,QAAA,CAAA,EAAA,GAAA,QAAA;cAEA;cACA,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAA,QAAA,CAAA,EAAO,CAAC;YAAA;YAAA;cAAA,OAAA,QAAA,CAAA,IAAA;UAAA;QAAA,GAAA,OAAA;MAAA;IAE9C;EACF;AACF,CAAC","sourcesContent":["\n<template>\n  <div class=\"container mx-auto px-4 h-full\">\n    <div class=\"flex content-center items-center justify-center h-full\">\n      <div class=\"w-full lg:w-4/12 px-4\">\n        <div\n          class=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\"\n        >\n          <div class=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n            <div class=\"rounded-t mb-0 px-6 py-6\">\n              <div class=\"text-center mb-3 border-b-1 border-blueGray-300\">\n                <h6 class=\"text-blueGray-500 text-sm font-bold\">Sign In</h6>\n              </div>\n            </div>\n            <form @submit.prevent=\"login\">\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"email\"\n                >\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  v-model=\"email\"\n                  required=\"required\"\n                  id=\"email\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Email\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"password\"\n                >\n                  Password\n                </label>\n                <input\n                  required=\"required\"\n                  type=\"password\"\n                  v-model=\"password\"\n                  id=\"password\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Password\"\n                />\n              </div>\n              <div>\n                <label class=\"inline-flex items-center cursor-pointer\">\n                  <input\n                    id=\"customCheckLogin\"\n                    type=\"checkbox\"\n                    class=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\n                  />\n                  <span class=\"ml-2 text-sm font-semibold text-blueGray-600\">\n                    Remember me\n                  </span>\n                </label>\n              </div>\n\n              <div class=\"text-center mt-6\">\n                <button\n                  class=\"bg-blueGray-800 text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\n                  type=\"submit\"\n                >\n                  Sign In\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class=\"flex flex-wrap mt-6 relative\">\n          <div class=\"w-1/2\">\n            <a href=\"javascript:void(0)\" class=\"text-blueGray-200\">\n              <small>Forgot password?</small>\n            </a>\n          </div>\n          <div class=\"w-1/2 text-right\">\n            <router-link to=\"/auth/register\" class=\"text-blueGray-200\">\n              <small>Create new account</small>\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    async login() {\n      let self = this;\n      try {\n        if (!self.email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(self.email)) return ;\n        if (!self.password) return;\n        // Dispatch the 'login' action to Vuex store\n        const response = await self.$store.dispatch(\"login\", {\n          email: self.email,\n          password: self.password,\n        });\n\n        // Check if login was successful based on the response\n        if (response.success) {\n          // Redirect the user to the admin dashboard if login is successful\n          self.$router.push(\"/profile\");\n        } else {\n          // Handle unsuccessful login (optional)\n          console.error(\"Login failed:\", response.message);\n        }\n      } catch (error) {\n        // Handle any errors that occurred during the login process\n        console.error(\"Error during login\", error);\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module","externalDependencies":[]}