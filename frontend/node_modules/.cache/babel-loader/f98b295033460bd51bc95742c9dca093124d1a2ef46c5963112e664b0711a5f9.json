{"ast":null,"code":"import _regeneratorRuntime from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/opt/homebrew/var/www/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// store/auth.js\nvar state = {\n  token: localStorage.getItem('token') || '',\n  status: ''\n};\nvar getters = {\n  isLoggedIn: function isLoggedIn(state) {\n    return !!state.token;\n  },\n  authStatus: function authStatus(state) {\n    return state.status;\n  },\n  authToken: function authToken(state) {\n    return state.token;\n  }\n};\nvar actions = {\n  register: function () {\n    var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref, userData) {\n      var commit, response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch('http://127.0.0.1:8000/api/register', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(userData)\n            });\n          case 4:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n            throw new Error('Registration failed');\n          case 7:\n            _context.next = 9;\n            return response.json();\n          case 9:\n            data = _context.sent;\n            commit('SET_USER', data.data.user);\n\n            // Handle successful registration response\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error('Registration failed');\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    function register(_x, _x2) {\n      return _register.apply(this, arguments);\n    }\n    return register;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2, credentials) {\n      var commit, _responseData$data, response, responseData, token;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch('http://127.0.0.1:8000/api/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(credentials)\n            });\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return response.json();\n          case 7:\n            responseData = _context2.sent;\n            if (response.ok) {\n              _context2.next = 10;\n              break;\n            }\n            throw new Error(responseData.message || 'Failed to login');\n          case 10:\n            token = responseData === null || responseData === void 0 || (_responseData$data = responseData.data) === null || _responseData$data === void 0 || (_responseData$data = _responseData$data.authorization) === null || _responseData$data === void 0 ? void 0 : _responseData$data.token;\n            localStorage.setItem('token', token);\n            commit('loginSuccess', token);\n\n            // Return the success response to handle routing in the Vue component\n            return _context2.abrupt(\"return\", {\n              success: true\n            });\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            commit('loginFailure', _context2.t0.message);\n\n            // Return the error response to handle routing in the Vue component\n            return _context2.abrupt(\"return\", {\n              success: false,\n              message: _context2.t0.message\n            });\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n    function login(_x3, _x4) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit;\n    localStorage.removeItem('token');\n    commit('logout');\n  }\n};\nvar mutations = {\n  loginSuccess: function loginSuccess(state, token) {\n    state.token = token;\n    state.status = 'success';\n  },\n  loginFailure: function loginFailure(state, errorMessage) {\n    state.token = '';\n    state.status = errorMessage;\n  },\n  logout: function logout(state) {\n    state.token = '';\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["state","token","localStorage","getItem","status","getters","isLoggedIn","authStatus","authToken","actions","register","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","userData","commit","response","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","ok","Error","json","user","t0","stop","_x","_x2","apply","arguments","login","_login","_callee2","_ref2","credentials","_responseData$data","responseData","_callee2$","_context2","message","authorization","setItem","abrupt","success","_x3","_x4","logout","_ref3","removeItem","mutations","loginSuccess","loginFailure","errorMessage"],"sources":["/opt/homebrew/var/www/frontend/src/store/auth.js"],"sourcesContent":["// store/auth.js\nconst state = {\n    token: localStorage.getItem('token') || '',\n    status: '',\n  };\n  \n  const getters = {\n    isLoggedIn: (state) => !!state.token,\n    authStatus: (state) => state.status,\n    authToken: (state) => state.token,\n  };\n  \n  const actions = {\n    register: async ({ commit }, userData) => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(userData),\n        });\n  \n        if (!response.ok) {\n          throw new Error('Registration failed');\n        }\n\n        const data = await response.json();\n        commit('SET_USER', data.data.user);\n  \n        // Handle successful registration response\n      } catch (error) {\n        throw new Error('Registration failed');\n      }\n    },\n    login: async ({ commit }, credentials) => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(credentials),\n        });\n  \n        const responseData = await response.json();\n  \n        if (!response.ok) {\n          throw new Error(responseData.message || 'Failed to login');\n        }\n  \n        const token = responseData?.data?.authorization?.token;\n        localStorage.setItem('token', token);\n        commit('loginSuccess', token);\n  \n        // Return the success response to handle routing in the Vue component\n        return { success: true };\n      } catch (error) {\n        commit('loginFailure', error.message);\n  \n        // Return the error response to handle routing in the Vue component\n        return { success: false, message: error.message };\n      }\n    },\n    logout: ({ commit }) => {\n      localStorage.removeItem('token');\n      commit('logout');\n    },\n  };\n  \n  const mutations = {\n    loginSuccess: (state, token) => {\n      state.token = token;\n      state.status = 'success';\n    },\n    loginFailure: (state, errorMessage) => {\n      state.token = '';\n      state.status = errorMessage;\n    },\n    logout: (state) => {\n      state.token = '';\n    },\n  };\n  \n  export default {\n    state,\n    getters,\n    actions,\n    mutations,\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}