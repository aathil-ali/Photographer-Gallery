{"remainingRequest":"/opt/homebrew/var/www/frontend/node_modules/vue-loader/dist/index.js??ref--1-1!/opt/homebrew/var/www/frontend/src/views/auth/Register.vue?vue&type=style&index=0&id=17c846a0&scoped=true&lang=css","dependencies":[{"path":"/opt/homebrew/var/www/frontend/src/views/auth/Register.vue","mtime":1707205616192},{"path":"/opt/homebrew/var/www/frontend/node_modules/css-loader/dist/cjs.js","mtime":1707019194251},{"path":"/opt/homebrew/var/www/frontend/node_modules/vue-loader/dist/stylePostLoader.js","mtime":1707019197498},{"path":"/opt/homebrew/var/www/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js","mtime":1707019199684},{"path":"/opt/homebrew/var/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1707019193212},{"path":"/opt/homebrew/var/www/frontend/node_modules/vue-loader/dist/index.js","mtime":1707019197235}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnNwYW4uaW5saW5lLWJsb2NrLmFsaWduLW1pZGRsZS5tci05IHsKICBwYWRkaW5nOiA4cHg7Cn0KCmJ1dHRvbi5hYnNvbHV0ZS5iZy10cmFuc3BhcmVudC50ZXh0LTJ4bC5mb250LXNlbWlib2xkLmxlYWRpbmctbm9uZS5yaWdodC0wLnRvcC0wLm10LTQubXItNi5vdXRsaW5lLW5vbmUuZm9jdXNcOm91dGxpbmUtbm9uZSB7CiAgcGFkZGluZzogMTBweDsKfQo="},{"version":3,"sources":["/opt/homebrew/var/www/frontend/src/views/auth/Register.vue"],"names":[],"mappings":";AAqRA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACdf","file":"/opt/homebrew/var/www/frontend/src/views/auth/Register.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container mx-auto px-4 h-full\">\n    <div class=\"flex content-center items-center justify-center h-full\">\n      <div class=\"w-full lg:w-6/12 px-4\">\n        <div\n          class=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\"\n        >\n          <div class=\"rounded-t mb-0 px-6 py-6\">\n            <div class=\"text-center mb-3\">\n              <h6 class=\"text-blueGray-500 text-sm font-bold\">Sign up</h6>\n            </div>\n\n            <div\n              v-if=\"alertOpen\"\n              :class=\"alertColor\"\n              class=\"text-white px-6 py-4 border-0 rounded relative mb-4\"\n            >\n              <span class=\"text-xl inline-block mr-5 align-middle\">\n                <i class=\"fas fa-bell\"></i>\n              </span>\n              <span class=\"inline-block align-middle mr-9\">\n                <b class=\"capitalize\"> </b> {{ alertMessage }}\n              </span>\n              <button\n                class=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\"\n                v-on:click=\"closeAlert()\"\n              >\n                <span>Ã—</span>\n              </button>\n            </div>\n\n            <hr class=\"mt-6 border-b-1 border-blueGray-300\" />\n          </div>\n          <div class=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n            <form @submit.prevent=\"registerUser\">\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"name\"\n                >\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  v-model=\"name\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Name\"\n                  required=\"required\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"email\"\n                >\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  v-model=\"email\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Email\"\n                  required=\"required\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"password\"\n                >\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  v-model=\"password\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"phone\"\n                >\n                  phone\n                </label>\n                <input\n                  type=\"phone\"\n                  v-model=\"phone\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"Phone\"\n                  required=\"required\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"picture\"\n                >\n                  picture\n                </label>\n                <input\n                  type=\"file\"\n                  @change=\"handleFileUpload\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"picture\"\n                  required=\"required\"\n                />\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                  htmlFor=\"bio\"\n                >\n                  Bio\n                </label>\n                <textarea\n                  v-model=\"bio\"\n                  class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  name=\"bio\"\n                  id=\"bio\"\n                  cols=\"30\"\n                  rows=\"5\"\n                ></textarea>\n              </div>\n\n              <div>\n                <label class=\"inline-flex items-center cursor-pointer\">\n                  <input\n                    id=\"customCheckLogin\"\n                    type=\"checkbox\"\n                    required=\"required\"\n                    class=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\n                  />\n                  <span class=\"ml-2 text-sm font-semibold text-blueGray-600\">\n                    I agree with the\n                    <a href=\"javascript:void(0)\" class=\"text-emerald-500\">\n                      Privacy Policy\n                    </a>\n                  </span>\n                </label>\n              </div>\n\n              <div class=\"text-center mt-6\">\n                <button\n                  class=\"bg-blueGray-800 text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\n                  type=\"submit\"\n                >\n                  Create Account\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      bio: \"\",\n      picture: null,\n      alertOpen: false,\n      errorMessage: \"\",\n      alertColor: \"bg-green-500\",\n      alertMessage: \"\",\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n\n      if (file) {\n        // You can access file properties here if needed\n        console.log(\"Selected file:\", file);\n\n        // Update the data property\n        this.picture = file;\n        console.log(\"eee\", this.picture);\n      }\n    },\n    closeAlert() {\n      this.alertOpen = false;\n    },\n\n    async registerUser() {\n\n\n      try {\n      let self = this;\n\n      self.alertMessage = \"\";\n      self.alertOpen = false;\n      self.alertColor = \"\";\n\n      // Create a FormData object\n      const formData = new FormData();\n        formData.append('name', this.name);\n        formData.append('email', this.email);\n        formData.append('password', this.password);\n        formData.append('phone_number', this.phone);\n        formData.append('bio', this.bio);\n\n        // Check if the picture is not null before appending\n        if (this.picture) {\n          formData.append('picture', this.picture);\n        }\n\n      console.log(formData);\n\n\n      // Validate form fields\n      if (!self.name) self.errorMessage = \"Name is required\";\n      if (!self.email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(self.email))\n        self.errorMessage = \"Invalid email format\";\n      if (!self.password || self.password.length < 8)\n        self.errorMessage = \"Password must be at least 8 characters\";\n      if (!self.phone || !/^\\d{10}$/.test(self.phone))\n        self.errorMessage = \"Invalid phone number format\";\n      if (!self.bio) self.errorMessage = \"Bio is required\";\n\n      if (self.errorMessage.length) {\n        self.alertMessage = self.errorMessage;\n        self.alertOpen = true;\n        self.alertColor = \"bg-red-500\";\n\n        return;\n      }\n\n     \n        console.log(formData);\n        // Append the FormData to the API call\n        let response = await self.$store.dispatch(\"register\", formData);\n\n        self.alertColor = \"bg-emerald-500\";\n        self.alertOpen = true;\n        self.alertMessage = \"Registration success\";\n        self.name = \" \";\n        self.email = \" \";\n        self.password = \" \";\n        self.phone = \" \";\n        self.bio = \" \";\n\n        if (response.success) {\n          setTimeout(() => {\n            // Proceed with registration after the delay\n            this.$router.push(\"/auth/login\");\n            // Call your API or dispatch an action to register the user\n          }, 5000);\n        }\n\n        // Handle successful registration\n      } catch (error) {\n        // Handle registration failure\n        self.errorMessage = error;\n        self.alertMessage = self.errorMessage;\n        self.alertOpen = true;\n        self.alertColor = \"bg-red-500\";\n      }\n    },\n  },\n};\n</script>\n<style scoped>\nspan.inline-block.align-middle.mr-9 {\n  padding: 8px;\n}\n\nbutton.absolute.bg-transparent.text-2xl.font-semibold.leading-none.right-0.top-0.mt-4.mr-6.outline-none.focus\\:outline-none {\n  padding: 10px;\n}\n</style>"]}]}